#!/bin/bash

# System command entry point, see lib/main.sh handler.
#
# Author: Arctelix (http://gitbub.com/arctelix)
#
# With thanks to the following sources:
# https://github.com/holman/dotfiles
# https://github.com/agross/dotfiles
#
# Dotsys - A platform agnostic package-manager with dotfile integration
#
# Licence: GNU General Public License
# Copyright (C) 2016  Arctelix (http://gitbub.com/arctelix)
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


# Other useful reference & rationale
# http://superuser.com/questions/789448/choosing-between-bashrc-profile-bash-profile-etc

set +o posix

init="$1"

chdir() {
  cd "$@" >/dev/null
}

dotsys_file () {
    local DOTSYS_FILE_DIRECTORY="$(chdir "${0%/*}" && pwd -P)"
    local DOTSYS_DOTSYS_FILE="$DOTSYS_FILE_DIRECTORY/${0##*/}"
    echo "$DOTSYS_DOTSYS_FILE"
}

dotsys_repository () {

    if [ "$DOTSYS_REPOSITORY" ]; then
        echo "$DOTSYS_REPOSITORY"
        return
    fi

    local DOTSYS_DOTSYS_FILE="$(dotsys_file)"

    if [[ -L "$DOTSYS_DOTSYS_FILE" ]]; then
        local DOTSYS_SYMLINK="$(drealpath "$DOTSYS_DOTSYS_FILE")"
        local DOTSYS_SYMLINK_DIRECTORY="$(dirname "$DOTSYS_SYMLINK")"
        local DOTSYS_FILE_DIRECTORY="$(chdir "$DOTSYS_FILE_DIRECTORY" &&
                             chdir "$DOTSYS_SYMLINK_DIRECTORY" && pwd -P)"
        local DOTSYS_REPOSITORY="${DOTSYS_FILE_DIRECTORY%/*}"
    else
        local DOTSYS_REPOSITORY="${DOTSYS_DOTSYS_FILE%/*/*}"
    fi

    echo "$DOTSYS_REPOSITORY"
}

export DOTSYS_REPOSITORY="$(dotsys_repository)"
export DOTSYS_LIBRARY="$DOTSYS_REPOSITORY/lib"

source "$DOTSYS_LIBRARY/core.sh"

# testing for all dotsys funcs
if [ "$init" = "test" ]; then
  shift
  source "$DOTSYS_LIBRARY/main.sh"
  DEBUG=true
  echo
  msg_warn "You are in dotsys test mode!"
  echo
  #eval "$1"
  "$@"

# Reset dotsys files (for testing purposes! YOU COULD MESS YOUR SHIT UP WITH THIS!)
elif [ "$init" = "reset_files" ]; then
  type="$2"
  shift; shift

  msg_warn "WARNING: THIS IS A DESTRUCTIVE COMMAND!"
  printf "Are you sure you want to reset $type?
        \rtype 'yes' or any key to abort : "

  read -r user_input
  if [ "$user_input" != "yes" ]; then
      exit
  fi

  if ! [ "$type" ] || [ "$type" = "backups" ]; then
    backups="$(find "$HOME" -mindepth 1 -maxdepth 1 -type f -name "*$1.dsbak")"
    for backup in $backups;do
        mv "$backup" "${backup%.dsbak}"
        echo "moved backup : $backup -> ${backup%.dsbak}"
    done
  fi

  if ! [ "$type" ] || [ "$type" = "symlinks" ]; then
    links="$(find "$HOME" -mindepth 1 -maxdepth 1 -type l -name ".$1*")"
    for link in $links;do
        target="$(drealpath "$link")"
        if [[ "$target" =~ .dotfiles|.stub ]];then
            rm "$link"
            echo "removed symlink : $link
            -> $target"
        fi
    done
  fi

  if ! [ "$type" ] || [ "$type" = "states" ]; then
    states="$(find "$DOTSYS_REPOSITORY/state" -mindepth 1 -maxdepth 1 -type f -not -name "user.state")"
    for state in $states;do
        rm "$state"
        echo "removed state : $state"
    done
  fi

  if ! [ "$type" ] || [ "$type" = "stubs" ]; then
    stubs="$(find "$DOTSYS_REPOSITORY/user/stubs" -mindepth 1 -maxdepth 1 -type f -name "*.stub")"
    for stub in $stubs;do
        rm "$stub"
        echo "removed stub : $stub"
    done
  fi

# Return path for sourcing
elif [ "$init" = "repository" ]; then
  echo "$DOTSYS_REPOSITORY"

# Return path for sourcing
elif [ "$init" = "source" ]; then
  shift
  echo "$DOTSYS_LIBRARY/${1}.sh"

# execute script function
elif [ -f "$DOTSYS_LIBRARY/${init}.sh"  ]; then
  shift
  source "$DOTSYS_LIBRARY/${init}.sh"
  "$@"

# call main dotsys func
else
  source "$DOTSYS_LIBRARY/main.sh"
  dotsys "$@"
  echo
fi